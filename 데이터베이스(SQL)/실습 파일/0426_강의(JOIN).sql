use market_db;

-- 기본 JOIN (INNER JOIN)
select * from buy inner join member on member.mem_id = buy.mem_id;
select * from buy join member 
	on member.mem_id = buy.mem_id;
    
--  table AS
select * from buy b join member m 
	on m.mem_id = b.mem_id
    where b.mem_id = 'GRL';
    
-- 구매 테이블의 모든 COLUMN
select B.MEM_ID, M.MEM_ID, M.MEM_NAME, B.PROD_NAME, M.ADDR, CONCAT(PHONE1, '-',PHONE2) 연락처,
	B.* from buy b join member m 
	on m.mem_id = b.mem_id
    where b.mem_id = 'GRL';

-- OUTER JOIN
SELECT M.MEM_ID, M.MEM_NAME, M.ADDR, B.PROD_NAME, B.PRICE, B.AMOUNT
	FROM BUY B RIGHT OUTER JOIN MEMBER M -- MEMBER 테이블을 다 보겠다 (구매이력이 없더라도 맴버를 다보겠다)
    ON M.MEM_ID = B.MEM_ID;


-- 구매이력이 없는 회원만 조회
SELECT M.MEM_ID, M.MEM_NAME, M.ADDR, B.PROD_NAME, B.PRICE, B.AMOUNT
	FROM BUY B RIGHT OUTER JOIN MEMBER M -- MEMBER 테이블을 다 보겠다 (구매이력이 없더라도 맴버를 다보겠다)
    ON M.MEM_ID = B.MEM_ID
	WHERE B.PROD_NAME = NULL;

CREATE TABLE BUY_COPY AS (SELECT * FROM BUY); -- 제약조건(PK,FK)은 가지고 오지 않음
SELECT * FROM BUY_COPY; 
INSERT INTO BUY_COPY VALUES(13, 'GG', 'TEST', 'GRP', 10,10);
COMMIT;
DESC BUY_COPY;

SELECT M.MEM_ID, M.MEM_NAME, M.ADDR, B.PROD_NAME, B.PRICE, B.AMOUNT
	FROM BUY_COPY B LEFT OUTER JOIN MEMBER M -- BUY 테이블을 다 보겠다 (회원정보가 없더라도 구매이력을 다보겠다)
    ON M.MEM_ID = B.MEM_ID;

-- BUYTBL과 USERTBL 이용
-- 구매자 ID , 구매자 이름, 구매물품, 주소 , 연락처조회

SELECT USERID, USERNAME, PRODNAME, ADDR, CONCAT(MOBILE1, MOBILE2) AS MOBILE
FROM BUYTBL JOIN USERTBL USING (USERID);

SELECT USERID, USERNAME, PRODNAME, ADDR, CONCAT(MOBILE1, MOBILE2) AS MOBILE
FROM BUYTBL JOIN USERTBL ON BUYTBL.USERID = USERTBL.USERID ;

-- KYM회원의 구매 물건만 조회
SELECT USERID, USERNAME, PRODNAME, ADDR, CONCAT(MOBILE1, MOBILE2) AS MOBILE
FROM BUYTBL JOIN USERTBL USING (USERID)
WHERE USERID = 'KYM';

-- 전체 회원이 구매한 목록을 회원 아이디순으로 정렬
SELECT USERID, USERNAME, PRODNAME, ADDR, CONCAT(MOBILE1, MOBILE2) AS MOBILE
FROM BUYTBL JOIN USERTBL USING (USERID)
ORDER BY USERID;

-- 구매기록이 없는 회원 정보도 조회해보자
SELECT USERTBL.USERID, USERNAME, PRODNAME, ADDR, CONCAT(MOBILE1, MOBILE2) AS MOBILE
FROM BUYTBL RIGHT JOIN USERTBL ON BUYTBL.USERID = USERTBL.USERID
WHERE PRODNAME IS NULL;

-- WHERE vs AND
-- WHERE : 조인하고 WHERE를 실행, 즉 다 조인하고 KHD만 뽑아라
SELECT USERTBL.USERID, USERNAME, PRODNAME, ADDR, CONCAT(MOBILE1, MOBILE2) AS MOBILE
FROM BUYTBL RIGHT JOIN USERTBL ON BUYTBL.USERID = USERTBL.USERID
WHERE USERTBL.USERID = 'KHD';

-- AND : KHD와 BUYTBL.USERID = USERTBL.USERID도 뽑아라 , 조건 확인 후 JOIN문 실행
SELECT USERTBL.USERID, USERNAME, PRODNAME, ADDR, CONCAT(MOBILE1, MOBILE2) AS MOBILE
FROM BUYTBL RIGHT JOIN USERTBL ON BUYTBL.USERID = USERTBL.USERID
AND USERTBL.USERID = 'KHD';

-- 쇼핑몰에서 한번이라도 구매한 기록이 있는 회원을 우수회원이라고 하자. 우수회원조회
SELECT DISTINCT USERID, USERNAME, CONCAT(MOBILE1, MOBILE2) AS MOBILE
FROM BUYTBL JOIN USERTBL USING (USERID);